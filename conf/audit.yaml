#
# Copyright 2019 Telefonaktiebolaget LM Ericsson
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Configuration file for ecAudit
# This configuration file will be automatically picked up by ecAudit if it is placed in the Cassandra configuration
# directory.


# The authorizer backend where the AuditAuthorizer delegate authorization requests.
#
# The value must represent a class name implementing the IAuthorizer interface. This can be any of the backends provided
# out of the box by Cassandra, or your own custom implementation. Cassandra comes with the following authorizer
# implementations:
# - org.apache.cassandra.auth.AllowAllAuthorizer allows any action to any user - set it to disable authorization.
# - org.apache.cassandra.auth.CassandraAuthorizer stores permissions in system_auth.role_permissions table.
#
# By default ecAudit will delegate to the CassandraAuthorizer.
#
wrapped_authorizer: org.apache.cassandra.auth.CassandraAuthorizer


# Role/User whitelist at node level
# This whitelist is only considered if the Java property 'ecaudit.filter_type' is set to YAML or YAML_AND_ROLE
# When enabled, log entries will not be generated for queries performed by roles listed here.
# Authentication attempts will still be logged.
#
#whitelist:
#    - username1
#    - username2


# log_timing_strategy - specify WHEN ecAudit should write log entries. The two options are:
#
# pre_logging  -> Will log an ATTEMPT before passing the operation to the QueryProcessor.
#                 In the event of failure a matching FAILED message will also be logged.
#                 This is the default value.
#
# post_logging -> One message will always be logged after the operation has completed. That message will indicate
#                 whether operation SUCCEEDED or FAILED. This is how logging is implemented in C* 4.0.
#
log_timing_strategy: pre_logging


# Audit logger backend, implementing the AuditLogger interface
#
# Out of the box, ecAudit provides the following logger backends
# - com.ericsson.bss.cassandra.ecaudit.logger.Slf4jAuditLogger
# - com.ericsson.bss.cassandra.ecaudit.logger.ChronicleAuditLogger
#
# By default ecAudit will use the Slf4jAuditLogger.
#
# Slf4jAuditLogger: Configure you logback.xml to specify location of log files and rotation policy. The following
# optional parameters are accepted:
# - log_format   - Format of the audit record sent to SLF4J. Fields can be configured with bash-style parameter
#                  substitution. Supported parameters are ${CLIENT_IP}, ${CLIENT_PORT}, ${COORDINATOR_IP}, ${USER},
#                  ${BATCH_ID}, ${STATUS}, ${OPERATION}, ${OPERATION_NAKED}, and ${TIMESTAMP}.
# - time_format  - Format of ${TIMESTAMP} field as defined by the Java DateTimeFormatter. By default this field will be
#                  unformatted and get printed as milliseconds since epoch of 1970-01-01Z.
# - time_zone    - Time zone of formatted ${TIMESTAMP}, using system default if unspecified.
#
# ChronicleAuditLogger: Make sure to start Cassandra with the '-da:net.openhft...' option. The following parameters are
# accepted:
# - log_dir      - The directory where binary log files will be stored. This parameter is mandatory for the Chronicle
#                  logger.
# - roll_cycle   - Frequency of log file roll cycle. Supported values are MINUTELY, HOURLY, and DAILY. Default is
#                  HOURLY.
# - max_log_size - Rotate oldest file when maximum size (in bytes) of log files is reached. Default is 16GB.
#
logger_backend:
    - class_name: com.ericsson.bss.cassandra.ecaudit.logger.Slf4jAuditLogger
      parameters:
#      - log_format: "{?client:'${CLIENT_IP}'|?}user:'${USER}'{?|batchId:'${BATCH_ID}'?}|status:'${STATUS}'|operation:'${OPERATION}'"
#        time_format:
#        time_zone:
