name: tests

on: [push, pull_request, workflow_dispatch]

jobs:
  code-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11' ]
    name: Java ${{ matrix.java }} code analysis
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-ca-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-ca-
      - name: Code Analysis
        run: mvn --batch-mode --activate-profiles github install pmd:check pmd:cpd-check license:check javadoc:jar -DskipTests=true
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11' ]
    name: Java ${{ matrix.java }} unit test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-ut-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-ut-
      - name: Unit Tests
        run: mvn --batch-mode --activate-profiles github test jacoco:report
      - name: Upload test coverage report
        uses: codecov/codecov-action@v2
        with:
          files: ./ecaudit/target/site/jacoco/jacoco.xml,./common/target/site/jacoco/jacoco.xml,./eclog/target/site/jacoco/jacoco.xml
          flags: unit-tests
          fail_ci_if_error: true
          verbose: true
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11' ]
        args: [ '', '-Djdk.attach.allowAttachSelf=true --add-exports java.base/jdk.internal.misc=ALL-UNNAMED --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-exports java.base/sun.nio.ch=ALL-UNNAMED --add-exports java.management.rmi/com.sun.jmx.remote.internal.rmi=ALL-UNNAMED --add-exports java.rmi/sun.rmi.registry=ALL-UNNAMED --add-exports java.rmi/sun.rmi.server=ALL-UNNAMED --add-exports java.sql/java.sql=ALL-UNNAMED --add-opens java.base/java.lang.module=ALL-UNNAMED --add-opens java.base/jdk.internal.loader=ALL-UNNAMED --add-opens java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/jdk.internal.reflect=ALL-UNNAMED --add-opens java.base/jdk.internal.math=ALL-UNNAMED --add-opens java.base/jdk.internal.module=ALL-UNNAMED --add-opens java.base/jdk.internal.util.jar=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED' ]
    name: Java ${{ matrix.java }} integration tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-it-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-it-
      - name: Integration Tests
        run: mvn --batch-mode --activate-profiles github test-compile failsafe:integration-test failsafe:verify ${{ matrix.args }}

